# Translate from Russian to Ukrainian

# Translate in app.py
# Help
def translate_app(language: bool, which_text: str, *args) -> str:
    match which_text:
        case '–ù–º—Ä': return '–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ú–∞—Ä—ñ—ó' if language else "–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ú–∞—Ä–∏–∏"
        case '–ú–∞—Ä–∏—è': return '–ú–∞—Ä—ñ—è' if language else '–ú–∞—Ä–∏—è'
        case '–ú–æ–∏ –∑–∞–ø–∏—Å–∏':
            text = args[0].replace('–í—Ä–µ–º—è', '–ß–∞—Å') if language else args[0]
            rus_list = ['–£—Å–ª—É–≥–∞', '–º–∏–Ω', '–†–µ—Å–Ω–∏—á–∫–∏', '–î–µ–ø–∏–ª—è—Ü–∏—è', '–ë–∏–∫–∏–Ω–∏', '–õ–∏—Ü–æ', "–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞"]  # rus word
            ua_list = ['–ü–æ—Å–ª—É–≥–∞', '—Ö–≤', '–í—ñ—ó', '–î–µ–ø—ñ–ª—è—Ü—ñ—è', '–ë—ñ–∫—ñ–Ω—ñ', '–û–±–ª–∏—á—á—è', "–ó–∞–ø–∏—Å —Å—Ç–≤–æ—Ä–µ–Ω–æ"]  # ua word
            for i in range(len(rus_list)):  # translate rus -> ua if user chose ukrainian
                text = text.replace(rus_list[i], ua_list[i]) if language else text
            return text
        case '–í–û–ø—Ü–∏—é': return "–û–±–µ—Ä—ñ—Ç—å –û–ø—Ü—ñ—é" if language else '–í—ã–±–µ—Ä–∏—Ç–µ –û–ø—Ü–∏—é'
        case '–í–ó–æ–Ω—É': return "–û–±–µ—Ä—ñ—Ç—å –ó–æ–Ω—É" if language else '–í—ã–±–µ—Ä–∏—Ç–µ –ó–æ–Ω—É'
        case '–í–ú–µ—Å—è—Ü': return "–û–±–µ—Ä—ñ—Ç—å –ú—ñ—Å—è—Ü—å" if language else '–í—ã–±–µ—Ä–∏—Ç–µ –ú–µ—Å—è—Ü'
        case '–í–î–µ–Ω—å': return "–û–±–µ—Ä—ñ—Ç—å –î–µ–Ω—å" if language else '–í—ã–±–µ—Ä–∏—Ç–µ –î–µ–Ω—å'
        case '–í–≤—ã–±—Ä–∞–ª–∏': return "–í–∏ –æ–±—Ä–∞–ª–∏" if language else '–í—ã –≤—ã–±—Ä–∞–ª–∏'
        case '–í–í—Ä–µ–º—è': return "–û–±–µ—Ä—ñ—Ç—å —á–∞—Å" if language else '–í—ã–±–µ—Ä–∏—Ç–µ –í—Ä–µ–º—è'
        case '–í–∑–∞–ø–∏—Å–∞—Ç—å—Å—è':
            return "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞" if language else '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞'
        case "–û—Ç–ª–∏—á–Ω–æ": return '–î–æ–±—Ä–µ, —è –≤–∞—Å –∑–∞–ø–∏—Å–∞–ª–∞' if language else '–û—Ç–ª–∏—á–Ω–æ, —è –≤–∞—Å –∑–∞–ø–∏—Å–∞–ª–∞'
        case "–ù–µ–ø–æ–Ω—è–ª–∞": return '–Ø –≤–∞—Å –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–∞üßê\n\nüíú –ë—É–¥—å –ª–∞—Å–∫–∞, –∫–æ—Ä–∏—Å—Ç—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏üòå' \
            if language else '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª–∞üßê\n\nüíú –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏üòå'
        case '–£–¥?': return "–í–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –∑–∞–ø–∏—Å?" if language else "–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?"
        case '–í—Ä–µ–º—è': return "–ß–∞—Å" if language else "–í—Ä–µ–º—è"
        case '–ó–∞–Ω—è—Ç–æ': return "–ù–∞ —Å—å–æ–≥–æ–¥–Ω—ñ –≤—Å–µ –∑–∞–π–Ω—è—Ç–µ" if language else "–ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å–µ –∑–∞–Ω—è—Ç–æ"
        case '–£–≤–∞—Å–Ω–µ—Ç': return "–£ –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–ø–∏—Å—ñ–≤" if language else "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π"


def translate_button(language: bool, which_text: str) -> str:
    match which_text:
        # option_choice
        case "–†–µ—Å–Ω": return "–í—ñ—ó" if language else "–†–µ—Å–Ω–∏—á–∫–∏"
        case "–î–µ–ø": return "–î–µ–ø—ñ–ª—è—Ü—ñ—è" if language else "–î–µ–ø–∏–ª—è—Ü–∏—è"
        case "–ù–î–µ–π": return "–ù–∞–∑–∞–¥ –¥–æ –≤–∏–±–æ—Ä—É –î—ñ—ó" if language else "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –î–µ–π—Å—Ç–≤–∏—è"
        # service_of_first_choice
        case "–ë–∏–∫–∏–Ω–∏": return "–ë—ñ–∫—ñ–Ω—ñ 30 —î–≤—Ä–æ, 20 —Ö–≤" if language else "–ë–∏–∫–∏–Ω–∏ 30 –µ–≤—Ä–æ, 20 –º–∏–Ω"
        case "–ù–æ–≥–∏": return "–ù–æ–≥–∏ 45 —î–≤—Ä–æ, 40 —Ö–≤" if language else "–ù–æ–≥–∏ 45 –µ–≤—Ä–æ, 40 –º–∏–Ω"
        case "–†—É–∫–∏": return "–†—É–∫–∏ 20 —î–≤—Ä–æ, 15 —Ö–≤" if language else "–†—É–∫–∏ 20 –µ–≤—Ä–æ, 15 –º–∏–Ω"
        case "–õ–∏—Ü–æ": return "–û–±–ª–∏—á—á—è 10 —î–≤—Ä–æ, 10 —Ö–≤" if language else "–õ–∏—Ü–æ 10 –µ–≤—Ä–æ, 10 –º–∏–Ω"
        case "–ù–û–ø—Ü": return "–ù–∞–∑–∞–¥ –¥–æ –≤–∏–±–æ—Ä—É –û–ø—Ü—ñ—ó" if language else "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –û–ø—Ü–∏–∏–∏"
        # choice_month
        case "–≠—Ç–æ—Ç–º": return "–¶–µ–π –º—ñ—Å—è—Ü—å" if language else "–≠—Ç–æ—Ç –º–µ—Å—è—Ü"
        case "–°–ª–µ–¥–º": return "–ù–∞—Å—Ç—É–ø–Ω–∏–π –º—ñ—Å—è—Ü—å" if language else "–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü"
        # show_time
        case "–ù–¥–Ω—è": return "–ù–∞–∑–∞–¥ –¥–æ –≤–∏–±–æ—Ä—É –¥–Ω—è" if language else "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –¥–Ω—è"
        # delete_or_not
        case "–£–¥–∞–ª": return "–í–∏–¥–∞–ª–∏—Ç–∏" if language else "–£–¥–∞–ª–∏—Ç—å"
        case "–ù–≤—ã–±–æ—Ä—É": return "–ù–∞–∑–∞–¥ –¥–æ –≤–∏–±–æ—Ä—É" if language else "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É"
        # first_choice
        case "–ó–∞–ø": return "–ó–∞–ø–∏—Å–∞—Ç–∏—Å—å" if language else "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
        case "–ú–∑–∞–ø": return "–ú–æ—ó –∑–∞–ø–∏—Å–∏" if language else "–ú–æ–∏ –∑–∞–ø–∏—Å–∏"
        case "–£–∑–∞–ø": return "–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Å" if language else "–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å"
        case "–Ø–∑—ã–∫": return "üè≥Ô∏è –†—É—Å—Å–∫–∏–π" if language else "üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"



